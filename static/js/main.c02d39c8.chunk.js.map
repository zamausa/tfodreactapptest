{"version":3,"sources":["../node_modules/@vladmandic/face-api/dist sync","utilities.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","labelMap","1","name","color","2","3","4","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","risultati","times","App","webcamRef","useRef","canvasRef","videoSource","setVideoSource","useState","videoConstraints","setVideoConstraints","JSZip","require","dataURI","coord1","coord2","sdrogo","isDetected","detes","Image","tempi","c1","c2","w","h","con","imma2","Set","node","document","createElement","today","tempo","cnt","style","display","foto","async","procImg","gg","net","wasd","imma","src","onload","labaledFaceDescriptors","Promise","all","map","descriptions","image","faceapi","process","concat","label","detections","withFaceLandmarks","withFaceDescriptor","push","descriptor","faceMatcher","canvas","displaySize","withFaceDescriptors","resizedDetections","results","d","findBestMatch","console","log","t","result","box","detection","drawBox","DrawBox","zIndex","getContext","container","go","has","drawImage","draw","body","append","appendChild","createTextNode","textContent","className","add","size","secondaDetect","setAttribute","img","tf","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","obj","executeAsync","array","toDataURL","processImage","immDetected","c","ct","imm","getElementById","can","temp","faceRecognition","slice","updateImageSource","navigator","mediaDevices","enumerateDevices","then","devices","detect","webc","current","video","readyState","pause","Date","getHours","getMinutes","getSeconds","playback","currentTime","currentMediaStream","srcObject","videoWidth","videoHeight","getScreenshot","ottieniInfo","useEffect","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","setInterval","runCoco","React","Webcam","ref","muted","position","marginLeft","marginRight","left","right","textAlign","zindex","alt","onClick","aspectRatio","play","constraints","getUserMedia","stream","catch","error","dataURIs","zip","promises","forEach","index","promise","base64Image","file","replace","split","base64","generateAsync","type","content","zipBlob","Blob","zipUrl","URL","createObjectURL","link","href","download","click","revokeObjectURL","renderApp","ReactDOM","render","window"],"mappings":"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","file":"static/js/main.c02d39c8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 202;","// Define our labelmap\r\nconst labelMap = {\r\n    1:{name:'person', color:'red'},\r\n    2:{name:'ThumbsDown', color:'yellow'},\r\n    3:{name:'ThankYou', color:'lime'},\r\n    4:{name:'LiveLong', color:'blue'},\r\n}\r\n\r\n// Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\r\n    for(let i=0; i<=boxes.length; i++){\r\n        if(boxes[i] && classes[i] && scores[i]>threshold){\r\n            // Extract variables\r\n            const [y,x,height,width] = boxes[i]\r\n            const text = classes[i]\r\n            if (text === 1) {\r\n                // Set styling\r\n                ctx.strokeStyle = labelMap[text]['color']\r\n                ctx.lineWidth = 5\r\n                ctx.fillStyle = 'white'\r\n                ctx.font = '30px Arial'\r\n\r\n                // DRAW!!\r\n                ctx.beginPath()\r\n                ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n                ctx.rect(x * imgWidth, y * imgHeight, (width - x) * imgWidth, (height - y) * imgHeight);\r\n                ctx.stroke()\r\n            }\r\n        }\r\n    }\r\n}","// Import dependencies\r\nimport * as faceapi from '@vladmandic/face-api';\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport JSZip from 'jszip';\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\nimport { drawRect } from \"./utilities\"; \r\n\r\nvar risultati = [];\r\nvar times = [];\r\nfunction App() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [videoSource, setVideoSource] = useState(\"webcam\");\r\n    var [videoConstraints, setVideoConstraints] = useState({\r\n        width: 1440,\r\n        height: 1080,\r\n        //deviceId: 'a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d',\r\n    });\r\n    const JSZip = require(\"jszip\");\r\n    var dataURI;\r\n    var intervId;\r\n    var coord1;\r\n    var coord2;\r\n    var width;\r\n    var height;\r\n    var isDetected = false;\r\n    var webcam = new Image();\r\n    var imgData;\r\n    var sdrogo;\r\n    var gg;\r\n    var detes = [];\r\n    var tempi = [];\r\n    var c1 = [];\r\n    var c2 = [];\r\n    var w = [];\r\n    var h = [];\r\n    var i;\r\n    var con = 0;\r\n    var imm;\r\n    var imma2 = new Set();\r\n    const node = document.createElement(\"li\");\r\n    node.id = \"lista immagini\";\r\n    node.style.display = \"block\";\r\n    var today;\r\n    var tempo;\r\n    const container = document.createElement(\"div\");\r\n    container.style.display = \"block\";\r\n    var cnt;\r\n    var foto = [];\r\n    navigator.mediaDevices.enumerateDevices().then(devices => console.log(devices))\r\n    // Main function\r\n\r\n    const runCoco = async () => {\r\n        // 3. TODO - Load network \r\n        const net = await tf.loadGraphModel('https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud/model.json');\r\n\r\n        /* Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n        ]);\r\n        */\r\n        Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n        ]);\r\n        setInterval(() => {\r\n            detect(net);\r\n        }, 5000);\r\n    }\r\n\r\n    function contienteImmagine(foto) {\r\n\r\n    }\r\n\r\n    async function procImg(gg, tempo, net) {\r\n        const wasd = conta();\r\n        const imma = new Image(640, 480);\r\n        imma.src = gg.src;\r\n        imma.id = tempo;\r\n        imma.onload = await async function () {\r\n            const labaledFaceDescriptors = await getLabeledFaceDescriptions();\r\n            const faceMatcher = new faceapi.FaceMatcher(labaledFaceDescriptors);\r\n\r\n            const canvas = faceapi.createCanvasFromMedia(imma);\r\n            //console.log(canvas);\r\n\r\n\r\n            const displaySize = { width: 640, height: 480 };\r\n            faceapi.matchDimensions(canvas, displaySize);\r\n\r\n            //console.log(imma.src);\r\n            const detections = await faceapi\r\n                .detectAllFaces(imma)\r\n                .withFaceLandmarks()\r\n                .withFaceDescriptors();\r\n\r\n            //console.log(detections);\r\n\r\n            const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n\r\n            const results = resizedDetections.map((d) => {\r\n                return faceMatcher.findBestMatch(d.descriptor);\r\n            });\r\n            console.log(results.length);\r\n            var t = 0;\r\n            if (results.length !== 0) {\r\n                //for (let i = 0; i < resizedDetections.length; i++) {\r\n                if (resizedDetections.length >= 1) {\r\n                    const result = faceMatcher.findBestMatch(resizedDetections[0].descriptor);;\r\n                    const box = resizedDetections[0].detection.box;\r\n                    const drawBox = new faceapi.draw.DrawBox(box, {\r\n                        label: result,\r\n                    });\r\n                    console.log(result);\r\n                    console.log(box);\r\n                    console.log(drawBox);\r\n                    //console.log(i);\r\n                    console.log(wasd);\r\n                    canvas.width = 640;\r\n                    canvas.height = 480;\r\n                    canvas.style.zIndex = 10;\r\n                    canvas.id = \"ritaglio\";\r\n                    const ctx = canvas.getContext(\"2d\");\r\n                    const container = document.createElement(\"div\");\r\n                    container.style.display = \"flex\";\r\n                    let go = true;\r\n                    console.log(\"prima \" + wasd);\r\n                    if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                        console.log(\"dentro \" + wasd);\r\n                        await ctx.drawImage(imma, 0, 0);\r\n                        await drawBox.draw(canvas);\r\n                        //console.log(canvas);\r\n                        document.body.append(node);\r\n                        container.appendChild(canvas);\r\n                        t = document.createTextNode(imma.id);\r\n                        cnt = document.createTextNode(\"   \" + wasd);\r\n                        console.log(t);\r\n                        //console.log(imma.src);\r\n                        //console.log(result.label);\r\n                        container.appendChild(t);\r\n                        container.appendChild(cnt);\r\n                        container.id = t.textContent;\r\n                        container.className = \"immagini\";\r\n                        node.appendChild(container);\r\n                        console.log(\"container \" + wasd);\r\n                        go = false;\r\n                        imma2.add(imma.src);\r\n                        // risultati.push(canvas.toDataURL());\r\n                        console.log(risultati.length)\r\n                        times.push(imma.id);\r\n                        console.log(risultati);\r\n                        console.log(imma2.size);\r\n                        console.log(imma.src);\r\n                        \r\n                        console.log(\"seconda chiamata if\");\r\n                        await secondaDetect(imma, net, canvas)\r\n                        \r\n                        //console.log(time);\r\n                    }\r\n                    console.log(\"dopo \" + wasd);\r\n\r\n                }\r\n            } else {\r\n                canvas.width = 640;\r\n                canvas.height = 480;\r\n                canvas.style.zIndex = 10;\r\n                canvas.id = \"ritaglio\";\r\n                const ctx = canvas.getContext(\"2d\");\r\n                const container = document.createElement(\"div\");\r\n                container.style.display = \"flex\";\r\n                container.setAttribute(\"name\", \"No\");\r\n                let go = true;\r\n                console.log(\"ggggggg\");\r\n                if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                    console.log(\"dentro \" + wasd);\r\n                    await ctx.drawImage(imma, 0, 0);\r\n                    //console.log(canvas);\r\n                    document.body.append(node);\r\n                    container.appendChild(canvas);\r\n                    t = document.createTextNode(imma.id);\r\n                    cnt = document.createTextNode(\"   \" + wasd);\r\n                    console.log(t);\r\n                    //console.log(imma.src);\r\n                    //console.log(result.label);\r\n                    container.appendChild(t);\r\n                    container.appendChild(cnt);\r\n                    container.id = t.textContent;\r\n\r\n                    node.appendChild(container);\r\n                    console.log(\"container \" + wasd);\r\n                    go = false;\r\n                    imma2.add(imma.src);\r\n                    await secondaDetect(imma, net, canvas);\r\n                    console.log(\"seconda chiamta else\");\r\n                }\r\n\r\n\r\n\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function scarica() {\r\n\r\n        const dataURIs = risultati;\r\n        console.log(dataURIs);\r\n        console.log(dataURIs.length)\r\n        console.log(times.length)\r\n        console.log(times);\r\n        const zip = new JSZip();\r\n        const promises = [];\r\n\r\n        dataURIs.forEach((dataURI, index) => {\r\n            const img = new Image();\r\n            img.src = dataURI;\r\n\r\n            const promise = new Promise((resolve) => {\r\n                img.onload = function () {\r\n                    const canvas = document.createElement(\"canvas\");\r\n                    const ctx = canvas.getContext(\"2d\");\r\n\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n\r\n                    ctx.drawImage(img, 0, 0);\r\n\r\n                    const base64Image = canvas.toDataURL(\"image/png\");\r\n                    console.log(index)\r\n                    console.log(times[index])\r\n                    zip.file(`${times[index].replace(/:/g, \"-\")}(${index}).png`, base64Image.split(\",\")[1], { base64: true });\r\n\r\n                    \r\n\r\n                    resolve();\r\n                };\r\n            });\r\n\r\n            promises.push(promise);\r\n        });\r\n\r\n        // Wait for all promises to resolve before generating the zip file\r\n        Promise.all(promises).then(() => {\r\n            zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n                const zipBlob = new Blob([content]);\r\n                const zipUrl = URL.createObjectURL(zipBlob);\r\n\r\n                const link = document.createElement(\"a\");\r\n                link.href = zipUrl;\r\n                link.download = \"images.zip\";\r\n                link.click();\r\n\r\n                URL.revokeObjectURL(zipUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    function conta() {\r\n        return con++;\r\n    }\r\n    async function secondaDetect(image, net, canvas) {\r\n        console.log(\"inizio seconda detect\")\r\n        const img = await tf.browser.fromPixels(image)\r\n        const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n        const casted = await resized.cast('int32')\r\n        const expanded = await casted.expandDims(0)\r\n        const obj = await net.executeAsync(expanded)\r\n        const boxes = await obj[1].array()\r\n        const classes = await obj[0].array()\r\n        const scores = await obj[4].array()\r\n\r\n\r\n        // Draw mesh\r\n        const ctx = canvas.getContext(\"2d\");\r\n        drawRect(boxes[0], classes[0], scores[0], 0.40, image.width, image.height, ctx);\r\n        risultati.push(canvas.toDataURL());\r\n        console.log(\"fine seconda detect\");\r\n        tf.dispose(img)\r\n        tf.dispose(resized)\r\n        tf.dispose(casted)\r\n        tf.dispose(expanded)\r\n        tf.dispose(obj)\r\n    }\r\n\r\n\r\n        function getLabeledFaceDescriptions() {\r\n            const labels = [\"Elon Musk\", \"Marco\", \"Obama\"];\r\n            return Promise.all(\r\n                labels.map(async (label) => {\r\n\r\n                    var descriptions = [];\r\n\r\n                    for (i = 1; i <= 8; i++) {\r\n                        const image = await faceapi.fetchImage(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        //console.log(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        const detections = await faceapi\r\n                            .detectSingleFace(image)\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptor();\r\n\r\n                        descriptions.push(detections.descriptor);\r\n                    }\r\n                    return new faceapi.LabeledFaceDescriptors(label, descriptions)\r\n                })\r\n            );\r\n        }\r\n\r\n        async function faceRecognition(gg, tempo, net) {\r\n\r\n\r\n            //console.log(results.values());\r\n            //console.log(\"prima loop\");\r\n            for (var i = 0; i < gg.length; i++) {\r\n                var temp = gg[i];\r\n                await procImg(temp, tempo, net);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Loop and detect hands\r\n        \r\n\r\n        //if (!intervId) {\r\n        //    intervId = setInterval(() => {\r\n        //        updateImageSource();\r\n        //    }, 5000);\r\n        //}\r\n    \r\n        async function processImage(immDetected, coord1, coord2, width, height, tempi, net) {\r\n            if (immDetected && coord1 && coord2 && width && height && tempi) {\r\n                var c = document.createElement('canvas');\r\n                c.width = 640;\r\n                c.height = 480;\r\n                var ct = c.getContext('2d');\r\n                var imm = new Image(640, 480);\r\n                //console.log(immDetected);\r\n                imm.src = immDetected;\r\n                imm.onload = async function () {\r\n                    await ct.drawImage(imm, coord1 * 640, coord2 * 480, width * 640, height * 480, 0, 0, width * 640, height * 480);\r\n                    dataURI = await c.toDataURL('image/png');\r\n                    document.getElementById(\"screenshot\").src = dataURI;\r\n                    isDetected = false;\r\n                    var gg = document.getElementById(\"screenshot\");\r\n                    var can = document.createElement(\"img\");\r\n                    can.src = await dataURI;\r\n                    foto.push(can);\r\n                    console.log(\"face recognition\");\r\n                    await faceRecognition(foto.slice(), tempi.slice(), net);\r\n\r\n                }\r\n                //console.log(dataURI);\r\n            }\r\n    }\r\n\r\n    \r\n        async function updateImageSource(isDetected, c1, c2, w, h, tempi, detes, net) {\r\n            \r\n            if (isDetected && detes && tempi && c1 && c2 && w && h) {\r\n                for (var i = 0; i < detes.length; i++) {\r\n                    await processImage(detes[i], c1[i], c2[i], w[i], h[i], tempi[i], net);\r\n                }\r\n            }\r\n        }\r\n\r\n    function videoTest() {\r\n        var webc = document.getElementById(\"webcam\");\r\n\r\n        // Check if the webcam is currently active\r\n        if (webcamRef.current.video.srcObject) {\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            // Detach the webcam stream\r\n            webcamRef.current.video.srcObject = null;\r\n\r\n            // Load and play the prerecorded video\r\n            webc.src = process.env.PUBLIC_URL + `/video/alley.mp4`;\r\n            webc.width = 640;\r\n            webc.height = 480;\r\n            webc.style.width = \"640px\";\r\n            webc.style.height = \"480px\";\r\n            webc.style.aspectRatio = \"4 / 3\";\r\n            webc.play();\r\n        }\r\n    }\r\n    function attivaWebcam() {\r\n        var video = webcamRef.current.video;\r\n\r\n        // Check if the webcam is currently active\r\n        if (!video.srcObject) {\r\n            const constraints = {\r\n                video: { width: 1440, height: 1080 }, // Set your desired width and height\r\n            };\r\n\r\n            // Access the webcam and attach the stream to the video element\r\n            navigator.mediaDevices.getUserMedia(constraints)\r\n                .then((stream) => {\r\n                    // Attach the webcam stream to the video element\r\n                    video.srcObject = stream;\r\n                    video.width = 1440; // Set your desired width\r\n                    video.height = 1080; // Set your desired height\r\n                    video.play();\r\n                    setVideoSource(\"webcam\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error accessing webcam:\", error);\r\n                });\r\n        }\r\n    }\r\n\r\n  \r\n    function ottieniTempo() {\r\n        today = new Date();\r\n        var ore;\r\n        var minuti;\r\n        var secondi;\r\n        if (today.getHours() < 10) {\r\n            ore = \"0\" + today.getHours();\r\n        } else {\r\n            ore = today.getHours();\r\n        }\r\n        if (today.getMinutes() < 10) {\r\n            minuti = \"0\" + today.getMinutes();\r\n        } else {\r\n            minuti = today.getMinutes();\r\n        }\r\n        if (today.getSeconds() < 10) {\r\n            secondi = \"0\" + today.getSeconds();\r\n        } else {\r\n            secondi = today.getSeconds();\r\n        }\r\n        var time = ore + \":\" + minuti + \":\" + secondi;\r\n        return time;\r\n    }\r\n  \r\n\r\n    const detect = async (net) => {\r\n        var webc = document.getElementById(\"webcam\");\r\n    // Check data is available\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            console.log(\"Pausing the webcam stream...\");\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            tempo = ottieniTempo();\r\n            var playback = webc.currentTime;\r\n            console.log(playback);\r\n            console.log(\"Webcam stream paused.\");\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const currentMediaStream = webcamRef.current.video.srcObject;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Set canvas height and width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n\r\n            // 4. TODO - Make Detections\r\n            const img = await tf.browser.fromPixels(video)\r\n            const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n            const casted = await resized.cast('int32')\r\n            const expanded = await casted.expandDims(0)\r\n            const obj = await net.executeAsync(expanded)\r\n\r\n\r\n\r\n            const boxes = await obj[1].array()\r\n            const classes = await obj[0].array()\r\n            const scores = await obj[4].array()\r\n\r\n\r\n            // Draw mesh\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n            detes = [];\r\n            tempi = [];\r\n            h = [];\r\n            w = [];\r\n            c1 = [];\r\n            c2 = [];\r\n            foto = [];\r\n\r\n\r\n            // 5. TODO - Update drawing utility\r\n            // drawSomething(obj, ctx)\r\n\r\n            async function ottieniInfo() {\r\n                for (var i = 0; i < scores[0].length; i++) {\r\n                    if (scores[0][i] > 0.4 && classes[0][i] == 1) {\r\n                        //var webcam = new Image();\r\n                        sdrogo = await webcamRef.current.getScreenshot();\r\n                        //console.log(sdrogo);\r\n                        detes.push(sdrogo)\r\n\r\n                        //console.log(tempo);\r\n                        tempi.push(tempo);\r\n\r\n                        isDetected = true;\r\n                        coord1 = boxes[0][i][1];\r\n                        c1.push(coord1);\r\n                        coord2 = boxes[0][i][0];\r\n                        c2.push(coord2);\r\n                        width = boxes[0][i][3] - boxes[0][i][1];\r\n                        w.push(width);\r\n                        height = boxes[0][i][2] - boxes[0][i][0];\r\n                        h.push(height);\r\n                    } else {\r\n                        if (isDetected) {\r\n                            await updateImageSource(isDetected, c1.slice(), c2.slice(), w.slice(), h.slice(), tempi.slice(), detes.slice(), net);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            await ottieniInfo();\r\n\r\n\r\n\r\n            //requestAnimationFrame(() => {\r\n            console.log(boxes[0][0]);\r\n            drawRect(boxes[0], classes[0], scores[0], 0.40, videoWidth, videoHeight, ctx);\r\n            //});\r\n\r\n            //console.log(\"Waiting for 1000 milliseconds...\");\r\n            //setTimeout(() => {\r\n            //    console.log(\"Resuming the webcam stream...\");\r\n            //    // Resume the webcam stream\r\n            //    webcamRef.current.video.play();\r\n            //    console.log(\"Webcam stream resumed.\");\r\n            //}, 3000);\r\n            if (playback === 34.48) {\r\n                playback = 0;\r\n            }\r\n\r\n            webcamRef.current.video.srcObject = null;\r\n            webc.currentTime = await playback;\r\n\r\n            webcamRef.current.video.srcObject = await currentMediaStream;\r\n\r\n\r\n\r\n\r\n            tf.dispose(img)\r\n            tf.dispose(resized)\r\n            tf.dispose(casted)\r\n            tf.dispose(expanded)\r\n            tf.dispose(obj)\r\n\r\n\r\n            \r\n            \r\n        }\r\n      return sdrogo;\r\n  };\r\n\r\n  useEffect(() => {runCoco()},[]);\r\n\r\n    \r\n    \r\n    function cambiaVideo() {\r\n        if (webcamRef.current) {\r\n            const currentDeviceId = webcamRef.current.props.videoConstraints.deviceId;\r\n            const newDeviceId =\r\n                currentDeviceId === \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\"\r\n                    ? \"a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d\"\r\n                    : \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\";\r\n\r\n            // Update the videoConstraints state\r\n            setVideoConstraints((prevConstraints) => ({\r\n                ...prevConstraints,\r\n                deviceId: newDeviceId,\r\n            }));\r\n        }\r\n    }\r\n  return (\r\n      <div className=\"App\">\r\n          \r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          videoConstraints={videoConstraints}\r\n          id=\"webcam\"\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n              />\r\n             \r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n              \r\n                  <img\r\n                      \r\n                      id=\"screenshot\"\r\n                      alt=\"Screenshot\"\r\n                      style={{\r\n                          width: 640,\r\n                          height: 480,\r\n                      }}\r\n                      />\r\n          </header>\r\n          \r\n          <button onClick={videoTest}>Test video 1</button>\r\n          <button onClick={attivaWebcam}>Attiva Webcam</button>\r\n          <button onClick={scarica}>Scarica risultati</button>\r\n      </div>\r\n     \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nfunction renderApp() {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n}\r\n\r\nrenderApp(); // Initial render\r\n\r\n// Listen for the window.onload event\r\nwindow.onload = function () {\r\n    renderApp(); // Render your React app after everything has loaded\r\n};"],"sourceRoot":""}