{"version":3,"sources":["../node_modules/@vladmandic/face-api/dist sync","utilities.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","labelMap","1","name","color","2","3","4","App","webcamRef","useRef","canvasRef","videoSource","setVideoSource","useState","dataURI","coord1","coord2","width","height","sdrogo","i","videoConstraints","setVideoConstraints","isDetected","detes","Image","tempi","c1","c2","w","h","con","imma2","Set","node","document","createElement","today","tempo","cnt","style","display","foto","async","procImg","gg","wasd","imma","src","onload","labaledFaceDescriptors","Promise","all","map","descriptions","image","faceapi","process","concat","label","detections","withFaceLandmarks","withFaceDescriptor","push","descriptor","faceMatcher","canvas","displaySize","withFaceDescriptors","resizedDetections","d","findBestMatch","t","length","result","box","detection","drawBox","DrawBox","console","log","zIndex","ctx","getContext","container","go","has","drawImage","draw","body","append","appendChild","createTextNode","textContent","className","add","processImage","immDetected","c","ct","imm","toDataURL","getElementById","can","temp","faceRecognition","slice","updateImageSource","navigator","mediaDevices","enumerateDevices","then","devices","detect","webc","current","video","readyState","pause","playback","currentTime","currentMediaStream","srcObject","videoWidth","videoHeight","img","tf","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","obj","net","executeAsync","boxes","array","classes","scores","getScreenshot","Date","getHours","getMinutes","getSeconds","ottieniInfo","drawRect","threshold","imgWidth","imgHeight","y","x","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","useEffect","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","setInterval","runCoco","React","Webcam","ref","muted","position","marginLeft","marginRight","left","right","textAlign","zindex","alt","onClick","aspectRatio","play","constraints","getUserMedia","stream","catch","error","renderApp","ReactDOM","render","window"],"mappings":"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","file":"static/js/main.0d98cbb3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 227;","// Define our labelmap\r\nconst labelMap = {\r\n    1:{name:'person', color:'red'},\r\n    2:{name:'ThumbsDown', color:'yellow'},\r\n    3:{name:'ThankYou', color:'lime'},\r\n    4:{name:'LiveLong', color:'blue'},\r\n}\r\n\r\n// Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\r\n    for(let i=0; i<=boxes.length; i++){\r\n        if(boxes[i] && classes[i] && scores[i]>threshold){\r\n            // Extract variables\r\n            const [y,x,height,width] = boxes[i]\r\n            const text = classes[i]\r\n            if (text === 1) {\r\n                // Set styling\r\n                ctx.strokeStyle = labelMap[text]['color']\r\n                ctx.lineWidth = 5\r\n                ctx.fillStyle = 'white'\r\n                ctx.font = '30px Arial'\r\n\r\n                // DRAW!!\r\n                ctx.beginPath()\r\n                ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n                ctx.rect(x * imgWidth, y * imgHeight, (width - x) * imgWidth, (height - y) * imgHeight);\r\n                ctx.stroke()\r\n            }\r\n        }\r\n    }\r\n}","// Import dependencies\r\nimport * as faceapi from '@vladmandic/face-api';\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\nimport { drawRect } from \"./utilities\"; \r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [videoSource, setVideoSource] = useState(\"webcam\");\r\n    var [videoConstraints, setVideoConstraints] = useState({\r\n        width: 1440,\r\n        height: 1080,\r\n        //deviceId: 'a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d',\r\n    });\r\n    \r\n    var dataURI;\r\n    var intervId;\r\n    var coord1;\r\n    var coord2;\r\n    var width;\r\n    var height;\r\n    var isDetected = false;\r\n    var webcam = new Image();\r\n    var imgData;\r\n    var sdrogo;\r\n    var gg;\r\n    var detes = [];\r\n    var tempi = [];\r\n    var c1 = [];\r\n    var c2 = [];\r\n    var w = [];\r\n    var h = [];\r\n    var i;\r\n    var con = 0;\r\n    var imm;\r\n    var imma2 = new Set();\r\n    const node = document.createElement(\"li\");\r\n    node.id = \"lista immagini\";\r\n    node.style.display = \"block\";\r\n    var today;\r\n    var tempo;\r\n    const container = document.createElement(\"div\");\r\n    container.style.display = \"block\"; \r\n    var cnt;\r\n    var foto = [];\r\n    navigator.mediaDevices.enumerateDevices().then(devices => console.log(devices))\r\n  // Main function\r\n    \r\n    const runCoco = async () => {\r\n        // 3. TODO - Load network \r\n        const net = await tf.loadGraphModel('https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud/model.json');\r\n\r\n        /* Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n        ]);\r\n        */\r\n        Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n        ]);\r\n        setInterval(() => {\r\n            detect(net);\r\n        }, 5000);\r\n    }\r\n\r\n        function contienteImmagine(foto) {\r\n\r\n        }\r\n\r\n        async function procImg(gg, tempo) {\r\n            const wasd = conta();\r\n            const imma = new Image(640, 480);\r\n            imma.src = gg.src;\r\n            imma.id = tempo;\r\n            imma.onload = await async function () {\r\n                const labaledFaceDescriptors = await getLabeledFaceDescriptions();\r\n                const faceMatcher = new faceapi.FaceMatcher(labaledFaceDescriptors);\r\n\r\n                const canvas = faceapi.createCanvasFromMedia(imma);\r\n                //console.log(canvas);\r\n\r\n\r\n                const displaySize = { width: 640, height: 480 };\r\n                faceapi.matchDimensions(canvas, displaySize);\r\n\r\n                //console.log(imma.src);\r\n                const detections = await faceapi\r\n                    .detectAllFaces(imma)\r\n                    .withFaceLandmarks()\r\n                    .withFaceDescriptors();\r\n\r\n                //console.log(detections);\r\n\r\n                const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n\r\n                const results = resizedDetections.map((d) => {\r\n                    return faceMatcher.findBestMatch(d.descriptor);\r\n                });\r\n                //console.log(results);\r\n                var t = 0;\r\n\r\n                //for (let i = 0; i < resizedDetections.length; i++) {\r\n                if (resizedDetections.length >= 1) {\r\n                    const result = faceMatcher.findBestMatch(resizedDetections[0].descriptor);;\r\n                    const box = resizedDetections[0].detection.box;\r\n                    const drawBox = new faceapi.draw.DrawBox(box, {\r\n                        label: result,\r\n                    });\r\n                    console.log(result);\r\n                    console.log(box);\r\n                    console.log(drawBox);\r\n                    //console.log(i);\r\n                    console.log(wasd);\r\n                    canvas.width = 640;\r\n                    canvas.height = 480;\r\n                    canvas.style.zIndex = 10;\r\n                    canvas.id = \"ritaglio\";\r\n                    const ctx = canvas.getContext(\"2d\");\r\n                    const container = document.createElement(\"div\");\r\n                    container.style.display = \"flex\";\r\n                    let go = true;\r\n                    console.log(\"prima \" + wasd);\r\n                    if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                        console.log(\"dentro \" + wasd);\r\n                        await ctx.drawImage(imma, 0, 0);\r\n                        await drawBox.draw(canvas);\r\n                        //console.log(canvas);\r\n                        document.body.append(node);\r\n                        container.appendChild(canvas);\r\n                        t = document.createTextNode(imma.id);\r\n                        cnt = document.createTextNode(\"   \" + wasd);\r\n                        console.log(t);\r\n                        //console.log(imma.src);\r\n                        //console.log(result.label);\r\n                        container.appendChild(t);\r\n                        container.appendChild(cnt);\r\n                        container.id = t.textContent;\r\n                        container.className = \"immagini\";\r\n                        node.appendChild(container);\r\n                        console.log(\"container \" + wasd);\r\n                        go = false;\r\n                        imma2.add(imma.src);\r\n\r\n\r\n                        //console.log(time);\r\n                    }\r\n                    console.log(\"dopo \" + wasd);\r\n\r\n\r\n\r\n\r\n                };\r\n\r\n            }\r\n\r\n        }\r\n\r\n    \r\n\r\n        function conta() {\r\n            return con++;\r\n        }\r\n\r\n\r\n        function getLabeledFaceDescriptions() {\r\n            const labels = [\"Elon Musk\", \"Marco\", \"Obama\"];\r\n            return Promise.all(\r\n                labels.map(async (label) => {\r\n\r\n                    var descriptions = [];\r\n\r\n                    for (i = 1; i <= 8; i++) {\r\n                        const image = await faceapi.fetchImage(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        //console.log(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        const detections = await faceapi\r\n                            .detectSingleFace(image)\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptor();\r\n\r\n                        descriptions.push(detections.descriptor);\r\n                    }\r\n                    return new faceapi.LabeledFaceDescriptors(label, descriptions)\r\n                })\r\n            );\r\n        }\r\n\r\n        async function faceRecognition(gg, tempo) {\r\n\r\n\r\n            //console.log(results.values());\r\n            //console.log(\"prima loop\");\r\n            for (var i = 0; i < gg.length; i++) {\r\n                var temp = gg[i];\r\n                await procImg(temp, tempo);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Loop and detect hands\r\n        \r\n\r\n        //if (!intervId) {\r\n        //    intervId = setInterval(() => {\r\n        //        updateImageSource();\r\n        //    }, 5000);\r\n        //}\r\n    \r\n        async function processImage(immDetected, coord1, coord2, width, height, tempi) {\r\n            if (immDetected && coord1 && coord2 && width && height && tempi) {\r\n                var c = document.createElement('canvas');\r\n                c.width = 640;\r\n                c.height = 480;\r\n                var ct = c.getContext('2d');\r\n                var imm = new Image(640, 480);\r\n                //console.log(immDetected);\r\n                imm.src = immDetected;\r\n                imm.onload = async function () {\r\n                    await ct.drawImage(imm, coord1 * 640, coord2 * 480, width * 640, height * 480, 0, 0, width * 640, height * 480);\r\n                    dataURI = await c.toDataURL('image/png');\r\n                    document.getElementById(\"screenshot\").src = dataURI;\r\n                    isDetected = false;\r\n                    var gg = document.getElementById(\"screenshot\");\r\n                    var can = document.createElement(\"img\");\r\n                    can.src = await dataURI;\r\n                    foto.push(can);\r\n                    await faceRecognition(foto.slice(), tempi.slice());\r\n\r\n                }\r\n                //console.log(dataURI);\r\n            }\r\n        }\r\n    \r\n        async function updateImageSource(isDetected, c1, c2, w, h, tempi, detes) {\r\n            \r\n            if (isDetected && detes && tempi && c1 && c2 && w && h) {\r\n                for (var i = 0; i < detes.length; i++) {\r\n                    await processImage(detes[i], c1[i], c2[i], w[i], h[i], tempi[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n    function videoTest() {\r\n        var webc = document.getElementById(\"webcam\");\r\n\r\n        // Check if the webcam is currently active\r\n        if (webcamRef.current.video.srcObject) {\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            // Detach the webcam stream\r\n            webcamRef.current.video.srcObject = null;\r\n\r\n            // Load and play the prerecorded video\r\n            webc.src = process.env.PUBLIC_URL + `/video/alley.mp4`;\r\n            webc.width = 640;\r\n            webc.height = 480;\r\n            webc.style.width = \"640px\";\r\n            webc.style.height = \"480px\";\r\n            webc.style.aspectRatio = \"4 / 3\";\r\n            webc.play();\r\n        }\r\n    }\r\n    function attivaWebcam() {\r\n        var video = webcamRef.current.video;\r\n\r\n        // Check if the webcam is currently active\r\n        if (!video.srcObject) {\r\n            const constraints = {\r\n                video: { width: 1440, height: 1080 }, // Set your desired width and height\r\n            };\r\n\r\n            // Access the webcam and attach the stream to the video element\r\n            navigator.mediaDevices.getUserMedia(constraints)\r\n                .then((stream) => {\r\n                    // Attach the webcam stream to the video element\r\n                    video.srcObject = stream;\r\n                    video.width = 1440; // Set your desired width\r\n                    video.height = 1080; // Set your desired height\r\n                    video.play();\r\n                    setVideoSource(\"webcam\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error accessing webcam:\", error);\r\n                });\r\n        }\r\n    }\r\n\r\n  \r\n    function ottieniTempo() {\r\n        today = new Date();\r\n        var ore;\r\n        var minuti;\r\n        var secondi;\r\n        if (today.getHours() < 10) {\r\n            ore = \"0\" + today.getHours();\r\n        } else {\r\n            ore = today.getHours();\r\n        }\r\n        if (today.getMinutes() < 10) {\r\n            minuti = \"0\" + today.getMinutes();\r\n        } else {\r\n            minuti = today.getMinutes();\r\n        }\r\n        if (today.getSeconds() < 10) {\r\n            secondi = \"0\" + today.getSeconds();\r\n        } else {\r\n            secondi = today.getSeconds();\r\n        }\r\n        var time = ore + \":\" + minuti + \":\" + secondi;\r\n        return time;\r\n    }\r\n  \r\n\r\n    const detect = async (net) => {\r\n        var webc = document.getElementById(\"webcam\");\r\n    // Check data is available\r\n     if (\r\n       typeof webcamRef.current !== \"undefined\" &&\r\n       webcamRef.current !== null &&\r\n       webcamRef.current.video.readyState === 4\r\n     ) {\r\n         console.log(\"Pausing the webcam stream...\");\r\n         // Pause the webcam stream\r\n         webcamRef.current.video.pause();\r\n         var playback = webc.currentTime;\r\n         console.log(playback);\r\n         console.log(\"Webcam stream paused.\");\r\n       // Get Video Properties\r\n         const video = webcamRef.current.video;\r\n         const currentMediaStream = webcamRef.current.video.srcObject;\r\n       const videoWidth = webcamRef.current.video.videoWidth;\r\n       const videoHeight = webcamRef.current.video.videoHeight;\r\n       \r\n       // Set video width\r\n       webcamRef.current.video.width = videoWidth;\r\n       webcamRef.current.video.height = videoHeight;\r\n\r\n       // Set canvas height and width\r\n       canvasRef.current.width = videoWidth;\r\n       canvasRef.current.height = videoHeight;\r\n\r\n       // 4. TODO - Make Detections\r\n       const img = await tf.browser.fromPixels(video)\r\n       const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n       const casted = await resized.cast('int32')\r\n       const expanded = await casted.expandDims(0)\r\n       const obj = await net.executeAsync(expanded)\r\n\r\n       \r\n\r\n       const boxes = await obj[1].array()\r\n       const classes = await obj[0].array()\r\n         const scores = await obj[4].array()\r\n\r\n\r\n       // Draw mesh\r\n       const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n         detes = [];\r\n         tempi = [];\r\n         h = [];\r\n         w = [];\r\n         c1 = [];\r\n         c2 = [];\r\n         foto = [];\r\n\r\n\r\n       // 5. TODO - Update drawing utility\r\n       // drawSomething(obj, ctx)\r\n         \r\n         async function ottieniInfo() {\r\n             for (var i = 0; i < scores[0].length; i++) {\r\n                 if (scores[0][i] > 0.5) {\r\n                     //var webcam = new Image();\r\n                     sdrogo = await webcamRef.current.getScreenshot();\r\n                     //console.log(sdrogo);\r\n                     detes.push(sdrogo)\r\n                     tempo = ottieniTempo();\r\n                     //console.log(tempo);\r\n                     tempi.push(tempo);\r\n\r\n                     isDetected = true;\r\n                     coord1 = boxes[0][i][1];\r\n                     c1.push(coord1);\r\n                     coord2 = boxes[0][i][0];\r\n                     c2.push(coord2);\r\n                     width = boxes[0][i][3] - boxes[0][i][1];\r\n                     w.push(width);\r\n                     height = boxes[0][i][2] - boxes[0][i][0];\r\n                     h.push(height);\r\n                 } else {\r\n                     await updateImageSource(isDetected, c1.slice(), c2.slice(), w.slice(), h.slice(), tempi.slice(), detes.slice());\r\n                     break;\r\n                 }\r\n             }\r\n         }\r\n\r\n         await ottieniInfo();\r\n\r\n         \r\n         \r\n         //requestAnimationFrame(() => {\r\n         console.log(boxes[0][0]);\r\n         drawRect(boxes[0], classes[0], scores[0], 0.50, videoWidth, videoHeight, ctx);\r\n         //});\r\n         \r\n         //console.log(\"Waiting for 1000 milliseconds...\");\r\n         //setTimeout(() => {\r\n         //    console.log(\"Resuming the webcam stream...\");\r\n         //    // Resume the webcam stream\r\n         //    webcamRef.current.video.play();\r\n         //    console.log(\"Webcam stream resumed.\");\r\n         //}, 3000);\r\n         if (playback === 34.48) {\r\n             playback = 0;\r\n         }\r\n         webcamRef.current.video.srcObject = null;\r\n\r\n         webc.currentTime = await playback;\r\n         \r\n         webcamRef.current.video.srcObject = await currentMediaStream;\r\n         \r\n         \r\n         \r\n\r\n       tf.dispose(img)\r\n       tf.dispose(resized)\r\n       tf.dispose(casted)\r\n       tf.dispose(expanded)\r\n       tf.dispose(obj)\r\n\r\n      }\r\n      return sdrogo;\r\n  };\r\n\r\n  useEffect(() => {runCoco()},[]);\r\n\r\n    \r\n    \r\n    function cambiaVideo() {\r\n        if (webcamRef.current) {\r\n            const currentDeviceId = webcamRef.current.props.videoConstraints.deviceId;\r\n            const newDeviceId =\r\n                currentDeviceId === \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\"\r\n                    ? \"a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d\"\r\n                    : \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\";\r\n\r\n            // Update the videoConstraints state\r\n            setVideoConstraints((prevConstraints) => ({\r\n                ...prevConstraints,\r\n                deviceId: newDeviceId,\r\n            }));\r\n        }\r\n    }\r\n  return (\r\n      <div className=\"App\">\r\n          \r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          videoConstraints={videoConstraints}\r\n          id=\"webcam\"\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n              />\r\n             \r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n              \r\n                  <img\r\n                      \r\n                      id=\"screenshot\"\r\n                      alt=\"Screenshot\"\r\n                      style={{\r\n                          width: 640,\r\n                          height: 480,\r\n                      }}\r\n                      />\r\n          </header>\r\n          \r\n          <button onClick={videoTest}>Test video 1</button>\r\n          <button onClick={attivaWebcam}>Attiva Webcam</button>\r\n      </div>\r\n     \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nfunction renderApp() {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n}\r\n\r\nrenderApp(); // Initial render\r\n\r\n// Listen for the window.onload event\r\nwindow.onload = function () {\r\n    renderApp(); // Render your React app after everything has loaded\r\n};"],"sourceRoot":""}