{"version":3,"sources":["../node_modules/@vladmandic/face-api/dist sync","utilities.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","labelMap","1","name","color","2","3","4","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","gg","i","length","y","x","height","width","text","console","log","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","videos","risultati","times","App","webcamRef","useRef","canvasRef","videoSource","setVideoSource","useState","videoConstraints","setVideoConstraints","JSZip","require","dataURI","coord1","coord2","sdrogo","isDetected","detes","Image","tempi","c1","c2","w","h","imma2","Set","node","document","createElement","today","tempo","style","display","foto","async","procImg","mod","con","imma","src","onload","labaledFaceDescriptors","Promise","all","map","descriptions","image","faceapi","process","concat","label","detections","withFaceLandmarks","withFaceDescriptor","push","descriptor","faceMatcher","canvas","displaySize","withFaceDescriptors","resizedDetections","t","d","findBestMatch","result","box","detection","drawBox","DrawBox","zIndex","getContext","container","go","has","drawImage","draw","body","append","appendChild","createTextNode","textContent","className","add","toDataURL","secondaDetect","setAttribute","imm","img","tf","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","obj","executeAsync","array","percentuale","toFixed","percNode","processImage","immDetected","c","ct","getElementById","can","imdata","getImageData","newCanvas","putImageData","dataURItemp","temp","faceRecognition","slice","updateImageSource","videoTestS","webc","current","video","srcObject","pause","preload","aspectRatio","play","navigator","mediaDevices","enumerateDevices","then","devices","detect","net","playback","readyState","Date","getHours","getMinutes","getSeconds","currentTime","currentMediaStream","videoWidth","videoHeight","getScreenshot","ottieniInfo","secondoVideo","useEffect","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","setInterval","runCoco","React","Webcam","ref","muted","position","marginLeft","marginRight","left","right","textAlign","zindex","alt","onClick","constraints","getUserMedia","stream","catch","error","dataURIs","zip","promises","forEach","index","promise","base64Image","file","replace","split","base64","generateAsync","type","content","zipBlob","Blob","zipUrl","URL","createObjectURL","link","href","download","click","revokeObjectURL","renderApp","ReactDOM","render","window"],"mappings":"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","file":"static/js/main.d1c4896e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 202;","// Define our labelmap\r\nconst labelMap = {\r\n    1:{name:'person', color:'red'},\r\n    2:{name:'cartellino', color:'yellow'},\r\n    3:{name:'ThankYou', color:'lime'},\r\n    4:{name:'LiveLong', color:'blue'},\r\n}\r\n\r\n// Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx, gg)=>{\r\n    for(let i=0; i<=boxes.length; i++){\r\n        if(boxes[i] && classes[i] && scores[i]>threshold){\r\n            // Extract variables\r\n            const [y,x,height,width] = boxes[i]\r\n            var text = classes[i]\r\n            if (text === 1 && !gg) {\r\n                console.log(\"persona\")\r\n                // Set styling\r\n                ctx.strokeStyle = labelMap[text]['color']\r\n                ctx.lineWidth = 5\r\n                ctx.fillStyle = 'white'\r\n                ctx.font = '30px Arial'\r\n\r\n                // DRAW!!\r\n                ctx.beginPath()\r\n                ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n                ctx.rect(x * imgWidth, y * imgHeight, (width - x) * imgWidth, (height - y) * imgHeight);\r\n                ctx.stroke()\r\n            }\r\n            else if (text === 1 && gg) {\r\n                console.log(\"cartellino\");\r\n                console.log(boxes[i]);\r\n                text = 2;\r\n                ctx.strokeStyle = labelMap[text]['color']\r\n                \r\n                ctx.lineWidth = 2;\r\n                    console.log(\"provaprovaprova\");\r\n                \r\n                    \r\n                \r\n                ctx.fillStyle = 'white'\r\n                ctx.font = '30px Arial'\r\n\r\n                // DRAW!!\r\n                console.log(ctx.lineWidth);\r\n                ctx.beginPath()\r\n                ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n                ctx.rect(x * imgWidth, y * imgHeight, (width - x) * imgWidth, (height - y) * imgHeight);\r\n                ctx.stroke()\r\n                }\r\n            \r\n        }\r\n    }\r\n}","// Import dependencies\r\nimport * as faceapi from '@vladmandic/face-api';\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport JSZip from 'jszip';\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\nimport { drawRect } from \"./utilities\"; \r\n\r\nvar risultati = [];\r\nvar times = [];\r\nvar videos;\r\nfunction App() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [videoSource, setVideoSource] = useState(\"webcam\");\r\n    var [videoConstraints, setVideoConstraints] = useState({\r\n        width: 1440,\r\n        height: 1080,\r\n        //deviceId: 'a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d',\r\n    });\r\n    const JSZip = require(\"jszip\");\r\n    var secondoVid = false;\r\n    var dataURI;\r\n    var intervId;\r\n    \r\n    var coord1;\r\n    var coord2;\r\n    var width;\r\n    var height;\r\n    var isDetected = false;\r\n    var webcam = new Image();\r\n    var imgData;\r\n    var sdrogo;\r\n    var gg;\r\n    var detes = [];\r\n    var tempi = [];\r\n    var c1 = [];\r\n    var c2 = [];\r\n    var w = [];\r\n    var h = [];\r\n    var i;\r\n    var con = 0;\r\n    var imm;\r\n    var imma2 = new Set();\r\n    const node = document.createElement(\"li\");\r\n    node.id = \"lista immagini\";\r\n    node.style.display = \"block\";\r\n    var today;\r\n    var tempo;\r\n    const container = document.createElement(\"div\");\r\n    container.style.display = \"block\";\r\n    var cnt;\r\n    var foto = [];\r\n    navigator.mediaDevices.enumerateDevices().then(devices => console.log(devices))\r\n    // Main function\r\n\r\n    const runCoco = async () => {\r\n        // 3. TODO - Load network \r\n        const net = await tf.loadGraphModel('https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud/model.json');\r\n        const mod = await tf.loadGraphModel('https://testcartellinosecondo.s3.eu-de.cloud-object-storage.appdomain.cloud/model.json');\r\n\r\n        /* Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n        ]);\r\n        */\r\n        Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n        ]);\r\n        setInterval(() => {\r\n            detect(net, mod);\r\n        }, 5000);\r\n    }\r\n\r\n    function contienteImmagine(foto) {\r\n\r\n    }\r\n\r\n    async function procImg(gg, tempo, mod) {\r\n        const wasd = conta();\r\n        //console.log(gg);\r\n        const imma = new Image();\r\n        imma.src = gg.src;\r\n        imma.id = tempo;\r\n        imma.onload = await async function () {\r\n            \n            const labaledFaceDescriptors = await getLabeledFaceDescriptions();\r\n            const faceMatcher = new faceapi.FaceMatcher(labaledFaceDescriptors);\r\n\r\n            const canvas = faceapi.createCanvasFromMedia(imma);\r\n            ////\n\r\n\r\n            const displaySize = { width: imma.width, height: imma.height };\r\n            faceapi.matchDimensions(canvas, displaySize);\r\n\r\n            //console.log(imma.src);\r\n            const detections = await faceapi\r\n                .detectAllFaces(imma)\r\n                .withFaceLandmarks()\r\n                .withFaceDescriptors();\r\n\r\n            //console.log(detections);\r\n\r\n            const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n\r\n            const results = resizedDetections.map((d) => {\r\n                return faceMatcher.findBestMatch(d.descriptor);\r\n            });\r\n            //console.log(results.length);\r\n            var t = 0;\r\n            if (results.length !== 0) {\r\n                //for (let i = 0; i < resizedDetections.length; i++) {\r\n                if (resizedDetections.length >= 1) {\r\n                    const result = faceMatcher.findBestMatch(resizedDetections[0].descriptor);;\r\n                    const box = resizedDetections[0].detection.box;\r\n                    const drawBox = new faceapi.draw.DrawBox(box, {\r\n                        label: result,\r\n                    });\r\n                   \r\n                    canvas.width = imma.width;\r\n                    canvas.height = imma.height;\r\n                    canvas.style.zIndex = 10;\r\n                    canvas.id = \"ritaglio\";\r\n                    const ctx = canvas.getContext(\"2d\");\r\n                    const container = document.createElement(\"div\");\r\n                    container.style.display = \"flex\";\r\n                    let go = true;\r\n                    //console.log(\"prima \" + wasd);\r\n                    if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                       // console.log(\"dentro \" + wasd);\r\n                        await ctx.drawImage(imma, 0, 0);\r\n                        await drawBox.draw(canvas);\r\n                        //console.log(canvas);\r\n                        document.body.append(node);\r\n                        container.appendChild(canvas);\r\n                        t = document.createTextNode(imma.id + \" \");\r\n                        \r\n                        //console.log(t);\r\n                        //console.log(imma.src);\r\n                        //console.log(result.label);\r\n                        container.appendChild(t);\r\n                        \r\n                        container.id = t.textContent;\r\n                        container.className = \"immagini\";\r\n                        node.appendChild(container);\r\n                        //console.log(\"container \" + wasd);\r\n                        go = false;\r\n                        imma2.add(imma.src);\r\n                        risultati.push(canvas.toDataURL());\r\n                        //console.log(risultati.length)\r\n                        times.push(imma.id);\r\n                        //console.log(risultati);\r\n                        //console.log(imma2.size);\r\n                        //console.log(imma.src);\r\n                        \r\n                       // console.log(\"seconda chiamata if\");\r\n                        await secondaDetect(imma, mod, canvas, container)\r\n                        \r\n                        //console.log(time);\r\n                    }\r\n                    //console.log(\"dopo \" + wasd);\r\n\r\n                }\r\n            } else {\r\n                canvas.width = imma.width;\r\n                canvas.height = imma.height;\r\n                canvas.style.zIndex = 10;\r\n                canvas.id = \"ritaglio\";\r\n                const ctx = canvas.getContext(\"2d\");\r\n                const container = document.createElement(\"div\");\r\n                container.style.display = \"flex\";\r\n                container.setAttribute(\"name\", \"No\");\r\n                let go = true;\r\n               // console.log(\"ggggggg\");\r\n                if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                    //console.log(\"dentro \" + wasd);\r\n                    await ctx.drawImage(imma, 0, 0);\r\n                    //console.log(canvas);\r\n                    document.body.append(node);\r\n                    container.appendChild(canvas);\r\n                    t = document.createTextNode(imma.id + \" \");\r\n                    \r\n                    //console.log(t);\r\n                    //console.log(imma.src);\r\n                    //console.log(result.label);\r\n                    container.appendChild(t);\r\n                    \r\n                    container.id = t.textContent;\r\n                    container.className = \"immagini\";\r\n                    node.appendChild(container);\r\n                    //console.log(\"container \" + wasd);\r\n                    go = false;\r\n                    imma2.add(imma.src);\r\n                    //console.log(container);\r\n                    \r\n                    await secondaDetect(imma, mod, canvas, container);\r\n                    \r\n                    //console.log(\"seconda chiamta else\");\r\n                }\r\n\r\n\r\n\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function scarica() {\r\n\r\n        const dataURIs = risultati;\r\n        //console.log(dataURIs);\r\n        //console.log(dataURIs.length)\r\n        //console.log(times.length)\r\n        //console.log(times);\r\n        const zip = new JSZip();\r\n        const promises = [];\r\n\r\n        dataURIs.forEach((dataURI, index) => {\r\n            const img = new Image();\r\n            img.src = dataURI;\r\n\r\n            const promise = new Promise((resolve) => {\r\n                img.onload = function () {\r\n                    const canvas = document.createElement(\"canvas\");\r\n                    const ctx = canvas.getContext(\"2d\");\r\n\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n\r\n                    ctx.drawImage(img, 0, 0);\r\n\r\n                    const base64Image = canvas.toDataURL(\"image/png\");\r\n                    //console.log(index)\r\n                    //console.log(times[index])\r\n                    zip.file(`${times[index].replace(/:/g, \"-\")}(${index}).png`, base64Image.split(\",\")[1], { base64: true });\r\n\r\n                    \r\n\r\n                    resolve();\r\n                };\r\n            });\r\n\r\n            promises.push(promise);\r\n        });\r\n\r\n        // Wait for all promises to resolve before generating the zip file\r\n        Promise.all(promises).then(() => {\r\n            zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n                const zipBlob = new Blob([content]);\r\n                const zipUrl = URL.createObjectURL(zipBlob);\r\n\r\n                const link = document.createElement(\"a\");\r\n                link.href = zipUrl;\r\n                link.download = \"images.zip\";\r\n                link.click();\r\n\r\n                URL.revokeObjectURL(zipUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    function conta() {\r\n        return con++;\r\n    }\r\n    async function secondaDetect(image, mod, canvas, container) {\r\n        //console.log(\"inizio seconda detect\")\r\n        //console.log(container);\r\n        //console.log(image.src);\r\n        var imm = new Image(640, 480);\r\n        imm.src = image.src\r\n        imm.onload = async function () {\r\n            const img = await tf.browser.fromPixels(imm)\r\n            const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n            //console.log(imm.src)\r\n            const casted = await resized.cast('int32')\r\n            const expanded = await casted.expandDims(0)\r\n            //console.log(expanded)\r\n            const obj = await mod.executeAsync(expanded)\r\n            \r\n            const boxes = await obj[2].array()\r\n            const classes = await obj[6].array()\r\n            const scores = await obj[1].array()\r\n            \r\n            \r\n            //console.log(scores[0]);\r\n            // Draw mesh\r\n            const ctx = canvas.getContext(\"2d\");\r\n            var gg = true;\r\n            drawRect(boxes[0], classes[0], scores[0], 0.50, image.width, image.height, ctx, gg);\r\n            console.log(scores[0][0]);\r\n            var percentuale = scores[0][0].toFixed(2) * 100;\r\n            if (scores[0][0] > 0.5) {\r\n\r\n                // console.log(percentuale);\r\n                var percNode = document.createTextNode(\"Cartellino RILEVATO: \" + percentuale + \"%\")\r\n                // console.log(percNode);\r\n                //console.log(container);\r\n                container.appendChild(percNode);\r\n                container.setAttribute(\"perc\", percentuale);\r\n            }\r\n            else {\r\n                if (percentuale === null || typeof percentuale === 'undefined') {\r\n                    percentuale = 0;\r\n                }\r\n                // console.log(percentuale);\r\n                var percNode = document.createTextNode(\"Cartellino NON rilevato: \" + percentuale + \"%\")\r\n                container.appendChild(percNode);\r\n                container.setAttribute(\"perc\", percentuale);\r\n            }\r\n            //risultati.push(canvas.toDataURL());\r\n            //console.log(\"fine seconda detect\");\r\n            tf.dispose(img)\r\n            tf.dispose(resized)\r\n            tf.dispose(casted)\r\n            tf.dispose(expanded)\r\n            tf.dispose(obj)\r\n            return percentuale;\r\n        }\r\n    }\r\n\r\n\r\n        function getLabeledFaceDescriptions() {\r\n            const labels = [\"Elon Musk\", \"Marco\", \"Obama\"];\r\n            return Promise.all(\r\n                labels.map(async (label) => {\r\n\r\n                    var descriptions = [];\r\n\r\n                    for (i = 1; i <= 8; i++) {\r\n                        const image = await faceapi.fetchImage(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        //console.log(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        const detections = await faceapi\r\n                            .detectSingleFace(image)\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptor();\r\n\r\n                        descriptions.push(detections.descriptor);\r\n                    }\r\n                    return new faceapi.LabeledFaceDescriptors(label, descriptions)\r\n                })\r\n            );\r\n        }\r\n\r\n        async function faceRecognition(gg, tempo, mod) {\r\n\r\n\r\n            //console.log(results.values());\r\n            //console.log(\"prima loop\");\r\n            for (var i = 0; i < gg.length; i++) {\r\n                var temp = gg[i];\r\n                await procImg(temp, tempo, mod);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        \r\n    \r\n        async function processImage(immDetected, coord1, coord2, width, height, tempi, mod) {\r\n            if (immDetected && tempi) {\r\n                var c = document.createElement('canvas');\r\n                c.width = 640;\r\n                c.height = 480;\r\n                var ct = c.getContext('2d');\r\n                var imm = new Image();\r\n                //console.log(immDetected);\r\n                imm.src = immDetected;\r\n                imm.onload = async function (immDetected) {\r\n                    await ct.drawImage(imm, coord1 * 640, coord2 * 480, width * 640, height * 480, 0, 0, width * 640, height * 480);\r\n                    dataURI = await c.toDataURL('image/png');\r\n                    document.getElementById(\"screenshot\").src = dataURI;\r\n                    isDetected = false;\r\n                    var gg = document.getElementById(\"screenshot\");\r\n                    var can = document.createElement(\"img\");\r\n                    \r\n                    var imdata = ct.getImageData(0, 0, width * 640, height * 480)\r\n                    //console.log(imdata.width);\r\n                    var newCanvas = document.createElement('canvas');\r\n                    newCanvas.width = imdata.width;\r\n                    newCanvas.height = imdata.height;\r\n                    var newCtx = newCanvas.getContext('2d');\r\n                    newCtx.putImageData(imdata, 0, 0);\r\n                    var dataURItemp = newCanvas.toDataURL('image/png');\r\n                    //console.log(dataURItemp)\r\n                    can.src = await dataURItemp;\r\n                    foto.push(can);\r\n                    //console.log(\"face recognition\");\r\n                    await faceRecognition(foto.slice(), tempi.slice(), mod);\r\n\r\n                }\r\n                //console.log(dataURI);\r\n            }\r\n    }\r\n\r\n    \r\n        async function updateImageSource(isDetected, c1, c2, w, h, tempi, detes, mod) {\r\n            \r\n            if (isDetected && detes && tempi && c1 && c2 && w && h) {\r\n                for (var i = 0; i < detes.length; i++) {\r\n                    await processImage(detes[i], c1[i], c2[i], w[i], h[i], tempi[i], mod);\r\n                }\r\n            }\r\n        }\r\n\r\n    function videoTest() {\r\n        var webc = document.getElementById(\"webcam\");\r\n        videos = 1;\r\n        // Check if the webcam is currently active\r\n        if (webcamRef.current.video.srcObject) {\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            // Detach the webcam stream\r\n            webcamRef.current.video.srcObject = null;\r\n        }\r\n            // Load and play the prerecorded video\r\n        webc.pause();\r\n            webc.src = process.env.PUBLIC_URL + `/video/alley.mp4`;\r\n            webc.width = 640;\r\n            webc.height = 480;\r\n            webc.style.width = \"640px\";\r\n            webc.style.height = \"480px\";\r\n            webc.style.aspectRatio = \"4 / 3\";\r\n            webc.play();\r\n        \r\n    }\r\n\r\n    function videoTestS() {\r\n        var webc = document.getElementById(\"webcam\");\r\n        videos = 2;\r\n        // Check if the webcam is currently active\r\n        if (webcamRef.current.video.srcObject) {\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            // Detach the webcam stream\r\n            webcamRef.current.video.srcObject = null;\r\n        }\r\n            // Load and play the prerecorded video\r\n        webc.pause();\r\n        webc.src = process.env.PUBLIC_URL + `/video/testcartellino.mp4`;\r\n        webc.preload = \"auto\";\r\n            webc.width = 640;\r\n            webc.height = 480;\r\n            webc.style.width = \"640px\";\r\n            webc.style.height = \"480px\";\r\n            webc.style.aspectRatio = \"4 / 3\";\r\n            webc.play();\r\n        }\r\n    \r\n    function attivaWebcam() {\r\n        var video = webcamRef.current.video;\r\n\r\n        // Check if the webcam is currently active\r\n        if (!video.srcObject) {\r\n            const constraints = {\r\n                video: { width: 1440, height: 1080 }, // Set your desired width and height\r\n            };\r\n\r\n            // Access the webcam and attach the stream to the video element\r\n            navigator.mediaDevices.getUserMedia(constraints)\r\n                .then((stream) => {\r\n                    // Attach the webcam stream to the video element\r\n                    video.srcObject = stream;\r\n                    video.width = 1440; // Set your desired width\r\n                    video.height = 1080; // Set your desired height\r\n                    video.play();\r\n                    setVideoSource(\"webcam\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error accessing webcam:\", error);\r\n                });\r\n        }\r\n    }\r\n\r\n    function secondoVideo() {\r\n        var webc = document.getElementById(\"webcam\");\r\n        videos = 3;\r\n        // Check if the webcam is currently active\r\n        if (webcamRef.current.video.srcObject) {\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            // Detach the webcam stream\r\n            webcamRef.current.video.srcObject = null;\r\n        }\r\n        // Load and play the prerecorded video\r\n        webc.pause();\r\n        webc.src = process.env.PUBLIC_URL + `/video/testcartellino2.mp4`;\r\n        webc.width = 640;\r\n        webc.height = 480;\r\n        webc.style.width = \"640px\";\r\n        webc.style.height = \"480px\";\r\n        webc.style.aspectRatio = \"4 / 3\";\r\n        webc.play();\r\n    }\r\n\r\n    \r\n  \r\n    function ottieniTempo() {\r\n        today = new Date();\r\n        var ore;\r\n        var minuti;\r\n        var secondi;\r\n        if (today.getHours() < 10) {\r\n            ore = \"0\" + today.getHours();\r\n        } else {\r\n            ore = today.getHours();\r\n        }\r\n        if (today.getMinutes() < 10) {\r\n            minuti = \"0\" + today.getMinutes();\r\n        } else {\r\n            minuti = today.getMinutes();\r\n        }\r\n        if (today.getSeconds() < 10) {\r\n            secondi = \"0\" + today.getSeconds();\r\n        } else {\r\n            secondi = today.getSeconds();\r\n        }\r\n        var time = ore + \":\" + minuti + \":\" + secondi;\r\n        return time;\r\n    }\r\n  \r\n\r\n    const detect = async (net, mod) => {\r\n        var webc = document.getElementById(\"webcam\");\r\n        var playback;\r\n    // Check data is available\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            console.log(\"Pausing the webcam stream...\");\r\n            // Pause the webcam stream\r\n            //console.log(webc.buffered.length);\r\n            await webcamRef.current.video.pause();\r\n            webc.pause();\r\n            tempo = ottieniTempo();\r\n            playback = webc.currentTime;\r\n            console.log(playback);\r\n            console.log(\"Webcam stream paused.\");\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const currentMediaStream = webcamRef.current.video.srcObject;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Set canvas height and width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n\r\n            // 4. TODO - Make Detections\r\n            const img = await tf.browser.fromPixels(video)\r\n            const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n            const casted = await resized.cast('int32')\r\n            const expanded = await casted.expandDims(0)\r\n            const obj = await net.executeAsync(expanded)\r\n\r\n\r\n\r\n            const boxes = await obj[1].array()\r\n            const classes = await obj[0].array()\r\n            const scores = await obj[4].array()\r\n\r\n\r\n            // Draw mesh\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n            detes = [];\r\n            tempi = [];\r\n            h = [];\r\n            w = [];\r\n            c1 = [];\r\n            c2 = [];\r\n            foto = [];\r\n\r\n\r\n            // 5. TODO - Update drawing utility\r\n            // drawSomething(obj, ctx)\r\n            await webcamRef.current.video.pause();\r\n            async function ottieniInfo() {\r\n                for (var i = 0; i < scores[0].length; i++) {\r\n                    if (scores[0][i] > 0.4 && classes[0][i] == 1) {\r\n                        //var webcam = new Image();\r\n                        sdrogo = await webcamRef.current.getScreenshot();\r\n                        //console.log(sdrogo);\r\n                        detes.push(sdrogo)\r\n\r\n                        //console.log(tempo);\r\n                        tempi.push(tempo);\r\n\r\n                        isDetected = true;\r\n                        coord1 = boxes[0][i][1];\r\n                        c1.push(coord1);\r\n                        coord2 = boxes[0][i][0];\r\n                        c2.push(coord2);\r\n                        width = boxes[0][i][3] - boxes[0][i][1];\r\n                        w.push(width);\r\n                        height = boxes[0][i][2] - boxes[0][i][0];\r\n                        h.push(height);\r\n                        console.log(width);\r\n                        console.log(height);\r\n                        console.log(coord1);\r\n                        console.log(coord2);\r\n                    } else {\r\n                        if (isDetected) {\r\n                            await updateImageSource(isDetected, c1.slice(), c2.slice(), w.slice(), h.slice(), tempi.slice(), detes.slice(), mod);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            await ottieniInfo();\r\n\r\n            await webcamRef.current.video.pause();\r\n\r\n            //requestAnimationFrame(() => {\r\n            //console.log(boxes[0][0]);\r\n            var gg = false;\r\n            await drawRect(boxes[0], classes[0], scores[0], 0.40, videoWidth, videoHeight, ctx, gg);\r\n            //});\r\n\r\n            //console.log(\"Waiting for 1000 milliseconds...\");\r\n            //setTimeout(() => {\r\n            //    console.log(\"Resuming the webcam stream...\");\r\n            //    // Resume the webcam stream\r\n            //    webcamRef.current.video.play();\r\n            //    console.log(\"Webcam stream resumed.\");\r\n            //}, 3000);\r\n            console.log(videos);\r\n            if (playback === 34.48 && videos === 1) {\r\n                \r\n                        playback = 0;\r\n                \r\n            }\r\n            console.log(playback);\r\n            if (playback === 30.283333 && videos === 2) {\r\n                secondoVideo();\r\n                playback = 0;\r\n                \r\n            } else if (playback === 42.933333) {\r\n                videoTestS();\r\n                playback = 0;\r\n                secondoVid = false;\r\n            }\r\n            \r\n            webcamRef.current.video.srcObject = null;\r\n            webc.currentTime = await playback;\r\n\r\n            webcamRef.current.video.srcObject = await currentMediaStream;\r\n\r\n\r\n\r\n\r\n            tf.dispose(img)\r\n            tf.dispose(resized)\r\n            tf.dispose(casted)\r\n            tf.dispose(expanded)\r\n            tf.dispose(obj)\r\n\r\n\r\n            console.log(\"finito\");\r\n            \r\n        }\r\n      return sdrogo;\r\n  };\r\n\r\n  useEffect(() => {runCoco()},[]);\r\n\r\n    \r\n    \r\n    function cambiaVideo() {\r\n        if (webcamRef.current) {\r\n            const currentDeviceId = webcamRef.current.props.videoConstraints.deviceId;\r\n            const newDeviceId =\r\n                currentDeviceId === \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\"\r\n                    ? \"a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d\"\r\n                    : \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\";\r\n\r\n            // Update the videoConstraints state\r\n            setVideoConstraints((prevConstraints) => ({\r\n                ...prevConstraints,\r\n                deviceId: newDeviceId,\r\n            }));\r\n        }\r\n    }\r\n  return (\r\n      <div className=\"App\">\r\n          \r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          videoConstraints={videoConstraints}\r\n          id=\"webcam\"\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n              />\r\n             \r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n              \r\n                  <img\r\n                      \r\n                      id=\"screenshot\"\r\n                      alt=\"Screenshot\"\r\n                      style={{\r\n                          width: 640,\r\n                          height: 480,\r\n                      }}\r\n                      />\r\n          </header>\r\n          \r\n          <button onClick={videoTest}>Test video 1</button>\r\n          <button onClick={videoTestS}>Test video 2</button>\r\n          <button onClick={attivaWebcam}>Attiva Webcam</button>\r\n          <button onClick={scarica}>Scarica risultati</button>\r\n      </div>\r\n     \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nfunction renderApp() {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n}\r\n\r\nrenderApp(); // Initial render\r\n\r\n// Listen for the window.onload event\r\nwindow.onload = function () {\r\n    renderApp(); // Render your React app after everything has loaded\r\n};"],"sourceRoot":""}