{"version":3,"sources":["../node_modules/@vladmandic/face-api/dist sync","utilities.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","labelMap","1","name","color","2","3","4","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","gg","i","length","y","x","height","width","text","console","log","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","risultati","times","App","webcamRef","useRef","canvasRef","videoSource","setVideoSource","useState","videoConstraints","setVideoConstraints","JSZip","require","dataURI","coord1","coord2","sdrogo","isDetected","detes","Image","tempi","c1","c2","w","h","con","imma2","Set","node","document","createElement","today","tempo","cnt","style","display","foto","async","procImg","mod","wasd","imma","src","onload","labaledFaceDescriptors","Promise","all","map","descriptions","image","faceapi","process","concat","label","detections","withFaceLandmarks","withFaceDescriptor","push","descriptor","faceMatcher","canvas","displaySize","withFaceDescriptors","resizedDetections","results","d","findBestMatch","t","result","box","detection","drawBox","DrawBox","zIndex","getContext","container","go","has","drawImage","draw","body","append","appendChild","createTextNode","textContent","className","add","toDataURL","size","secondaDetect","setAttribute","img","tf","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","obj","executeAsync","array","processImage","immDetected","c","ct","imm","getElementById","can","temp","faceRecognition","slice","updateImageSource","navigator","mediaDevices","enumerateDevices","then","devices","detect","net","webc","current","video","readyState","pause","Date","getHours","getMinutes","getSeconds","playback","currentTime","currentMediaStream","srcObject","videoWidth","videoHeight","getScreenshot","ottieniInfo","useEffect","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","setInterval","runCoco","React","Webcam","ref","muted","position","marginLeft","marginRight","left","right","textAlign","zindex","alt","onClick","aspectRatio","play","constraints","getUserMedia","stream","catch","error","dataURIs","zip","promises","forEach","index","promise","base64Image","file","replace","split","base64","generateAsync","type","content","zipBlob","Blob","zipUrl","URL","createObjectURL","link","href","download","click","revokeObjectURL","renderApp","ReactDOM","render","window"],"mappings":"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","file":"static/js/main.745aace6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 202;","// Define our labelmap\r\nconst labelMap = {\r\n    1:{name:'person', color:'red'},\r\n    2:{name:'cartellino', color:'yellow'},\r\n    3:{name:'ThankYou', color:'lime'},\r\n    4:{name:'LiveLong', color:'blue'},\r\n}\r\n\r\n// Define a drawing function\r\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx, gg)=>{\r\n    for(let i=0; i<=boxes.length; i++){\r\n        if(boxes[i] && classes[i] && scores[i]>threshold){\r\n            // Extract variables\r\n            const [y,x,height,width] = boxes[i]\r\n            var text = classes[i]\r\n            if (text === 1 && !gg) {\r\n                console.log(\"persona\")\r\n                // Set styling\r\n                ctx.strokeStyle = labelMap[text]['color']\r\n                ctx.lineWidth = 5\r\n                ctx.fillStyle = 'white'\r\n                ctx.font = '30px Arial'\r\n\r\n                // DRAW!!\r\n                ctx.beginPath()\r\n                ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n                ctx.rect(x * imgWidth, y * imgHeight, (width - x) * imgWidth, (height - y) * imgHeight);\r\n                ctx.stroke()\r\n            }\r\n            else if (text === 1 && gg) {\r\n                console.log(\"cartellino\");\r\n                console.log(boxes[i]);\r\n                text = 2;\r\n                ctx.strokeStyle = labelMap[text]['color']\r\n                ctx.lineWidth = 5\r\n                ctx.fillStyle = 'white'\r\n                ctx.font = '30px Arial'\r\n\r\n                // DRAW!!\r\n                ctx.beginPath()\r\n                ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10)\r\n                ctx.rect(x * imgWidth, y * imgHeight, (width - x) * imgWidth, (height - y) * imgHeight);\r\n                ctx.stroke()\r\n                }\r\n            \r\n        }\r\n    }\r\n}","// Import dependencies\r\nimport * as faceapi from '@vladmandic/face-api';\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport JSZip from 'jszip';\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\nimport { drawRect } from \"./utilities\"; \r\n\r\nvar risultati = [];\r\nvar times = [];\r\nfunction App() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [videoSource, setVideoSource] = useState(\"webcam\");\r\n    var [videoConstraints, setVideoConstraints] = useState({\r\n        width: 1440,\r\n        height: 1080,\r\n        //deviceId: 'a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d',\r\n    });\r\n    const JSZip = require(\"jszip\");\r\n    var dataURI;\r\n    var intervId;\r\n    var coord1;\r\n    var coord2;\r\n    var width;\r\n    var height;\r\n    var isDetected = false;\r\n    var webcam = new Image();\r\n    var imgData;\r\n    var sdrogo;\r\n    var gg;\r\n    var detes = [];\r\n    var tempi = [];\r\n    var c1 = [];\r\n    var c2 = [];\r\n    var w = [];\r\n    var h = [];\r\n    var i;\r\n    var con = 0;\r\n    var imm;\r\n    var imma2 = new Set();\r\n    const node = document.createElement(\"li\");\r\n    node.id = \"lista immagini\";\r\n    node.style.display = \"block\";\r\n    var today;\r\n    var tempo;\r\n    const container = document.createElement(\"div\");\r\n    container.style.display = \"block\";\r\n    var cnt;\r\n    var foto = [];\r\n    navigator.mediaDevices.enumerateDevices().then(devices => console.log(devices))\r\n    // Main function\r\n\r\n    const runCoco = async () => {\r\n        // 3. TODO - Load network \r\n        const net = await tf.loadGraphModel('https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud/model.json');\r\n        const mod = await tf.loadGraphModel('https://testtfodappcartellino.s3.eu-de.cloud-object-storage.appdomain.cloud/model.json');\r\n\r\n        /* Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(\"https://testtfodausa.s3.eu-de.cloud-object-storage.appdomain.cloud\"),\r\n        ]);\r\n        */\r\n        Promise.all([\r\n            faceapi.nets.ssdMobilenetv1.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceLandmark68Net.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n            faceapi.nets.faceRecognitionNet.loadFromUri(process.env.PUBLIC_URL + \"/models\"),\r\n        ]);\r\n        setInterval(() => {\r\n            detect(net, mod);\r\n        }, 5000);\r\n    }\r\n\r\n    function contienteImmagine(foto) {\r\n\r\n    }\r\n\r\n    async function procImg(gg, tempo, mod) {\r\n        const wasd = conta();\r\n        const imma = new Image(640, 480);\r\n        imma.src = gg.src;\r\n        imma.id = tempo;\r\n        imma.onload = await async function () {\r\n            const labaledFaceDescriptors = await getLabeledFaceDescriptions();\r\n            const faceMatcher = new faceapi.FaceMatcher(labaledFaceDescriptors);\r\n\r\n            const canvas = faceapi.createCanvasFromMedia(imma);\r\n            //console.log(canvas);\r\n\r\n\r\n            const displaySize = { width: 640, height: 480 };\r\n            faceapi.matchDimensions(canvas, displaySize);\r\n\r\n            //console.log(imma.src);\r\n            const detections = await faceapi\r\n                .detectAllFaces(imma)\r\n                .withFaceLandmarks()\r\n                .withFaceDescriptors();\r\n\r\n            //console.log(detections);\r\n\r\n            const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n\r\n            const results = resizedDetections.map((d) => {\r\n                return faceMatcher.findBestMatch(d.descriptor);\r\n            });\r\n            console.log(results.length);\r\n            var t = 0;\r\n            if (results.length !== 0) {\r\n                //for (let i = 0; i < resizedDetections.length; i++) {\r\n                if (resizedDetections.length >= 1) {\r\n                    const result = faceMatcher.findBestMatch(resizedDetections[0].descriptor);;\r\n                    const box = resizedDetections[0].detection.box;\r\n                    const drawBox = new faceapi.draw.DrawBox(box, {\r\n                        label: result,\r\n                    });\r\n                    console.log(result);\r\n                    console.log(box);\r\n                    console.log(drawBox);\r\n                    //console.log(i);\r\n                    console.log(wasd);\r\n                    canvas.width = 640;\r\n                    canvas.height = 480;\r\n                    canvas.style.zIndex = 10;\r\n                    canvas.id = \"ritaglio\";\r\n                    const ctx = canvas.getContext(\"2d\");\r\n                    const container = document.createElement(\"div\");\r\n                    container.style.display = \"flex\";\r\n                    let go = true;\r\n                    console.log(\"prima \" + wasd);\r\n                    if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                        console.log(\"dentro \" + wasd);\r\n                        await ctx.drawImage(imma, 0, 0);\r\n                        await drawBox.draw(canvas);\r\n                        //console.log(canvas);\r\n                        document.body.append(node);\r\n                        container.appendChild(canvas);\r\n                        t = document.createTextNode(imma.id);\r\n                        cnt = document.createTextNode(\"   \" + wasd);\r\n                        console.log(t);\r\n                        //console.log(imma.src);\r\n                        //console.log(result.label);\r\n                        container.appendChild(t);\r\n                        container.appendChild(cnt);\r\n                        container.id = t.textContent;\r\n                        container.className = \"immagini\";\r\n                        node.appendChild(container);\r\n                        console.log(\"container \" + wasd);\r\n                        go = false;\r\n                        imma2.add(imma.src);\r\n                        risultati.push(canvas.toDataURL());\r\n                        console.log(risultati.length)\r\n                        times.push(imma.id);\r\n                        console.log(risultati);\r\n                        console.log(imma2.size);\r\n                        console.log(imma.src);\r\n                        \r\n                        console.log(\"seconda chiamata if\");\r\n                        await secondaDetect(imma, mod, canvas)\r\n                        \r\n                        //console.log(time);\r\n                    }\r\n                    console.log(\"dopo \" + wasd);\r\n\r\n                }\r\n            } else {\r\n                canvas.width = 640;\r\n                canvas.height = 480;\r\n                canvas.style.zIndex = 10;\r\n                canvas.id = \"ritaglio\";\r\n                const ctx = canvas.getContext(\"2d\");\r\n                const container = document.createElement(\"div\");\r\n                container.style.display = \"flex\";\r\n                container.setAttribute(\"name\", \"No\");\r\n                let go = true;\r\n                console.log(\"ggggggg\");\r\n                if (!imma2.has(imma.src) && go && !(typeof imma === 'undefined') & !(typeof imma.src === 'undefined')) {\r\n                    console.log(\"dentro \" + wasd);\r\n                    await ctx.drawImage(imma, 0, 0);\r\n                    //console.log(canvas);\r\n                    document.body.append(node);\r\n                    container.appendChild(canvas);\r\n                    t = document.createTextNode(imma.id);\r\n                    cnt = document.createTextNode(\"   \" + wasd);\r\n                    console.log(t);\r\n                    //console.log(imma.src);\r\n                    //console.log(result.label);\r\n                    container.appendChild(t);\r\n                    container.appendChild(cnt);\r\n                    container.id = t.textContent;\r\n\r\n                    node.appendChild(container);\r\n                    console.log(\"container \" + wasd);\r\n                    go = false;\r\n                    imma2.add(imma.src);\r\n                    await secondaDetect(imma, mod, canvas);\r\n                    console.log(\"seconda chiamta else\");\r\n                }\r\n\r\n\r\n\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function scarica() {\r\n\r\n        const dataURIs = risultati;\r\n        console.log(dataURIs);\r\n        console.log(dataURIs.length)\r\n        console.log(times.length)\r\n        console.log(times);\r\n        const zip = new JSZip();\r\n        const promises = [];\r\n\r\n        dataURIs.forEach((dataURI, index) => {\r\n            const img = new Image();\r\n            img.src = dataURI;\r\n\r\n            const promise = new Promise((resolve) => {\r\n                img.onload = function () {\r\n                    const canvas = document.createElement(\"canvas\");\r\n                    const ctx = canvas.getContext(\"2d\");\r\n\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n\r\n                    ctx.drawImage(img, 0, 0);\r\n\r\n                    const base64Image = canvas.toDataURL(\"image/png\");\r\n                    console.log(index)\r\n                    console.log(times[index])\r\n                    zip.file(`${times[index].replace(/:/g, \"-\")}(${index}).png`, base64Image.split(\",\")[1], { base64: true });\r\n\r\n                    \r\n\r\n                    resolve();\r\n                };\r\n            });\r\n\r\n            promises.push(promise);\r\n        });\r\n\r\n        // Wait for all promises to resolve before generating the zip file\r\n        Promise.all(promises).then(() => {\r\n            zip.generateAsync({ type: \"blob\" }).then(function (content) {\r\n                const zipBlob = new Blob([content]);\r\n                const zipUrl = URL.createObjectURL(zipBlob);\r\n\r\n                const link = document.createElement(\"a\");\r\n                link.href = zipUrl;\r\n                link.download = \"images.zip\";\r\n                link.click();\r\n\r\n                URL.revokeObjectURL(zipUrl);\r\n            });\r\n        });\r\n    }\r\n\r\n    function conta() {\r\n        return con++;\r\n    }\r\n    async function secondaDetect(image, mod, canvas) {\r\n        console.log(\"inizio seconda detect\")\r\n        console.log(mod);\r\n        const img = await tf.browser.fromPixels(image)\r\n        const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n        const casted = await resized.cast('int32')\r\n        const expanded = await casted.expandDims(0)\r\n        const obj = await mod.executeAsync(expanded)\r\n        const boxes = await obj[2].array()\r\n        const classes = await obj[0].array()\r\n        const scores = await obj[4].array()\r\n\r\n        console.log(boxes[0]);\r\n        // Draw mesh\r\n        const ctx = canvas.getContext(\"2d\");\r\n        var gg = true;  \r\n        drawRect(boxes[0], classes[0], scores[0], 0.50, image.width, image.height, ctx, gg);\r\n        //risultati.push(canvas.toDataURL());\r\n        console.log(\"fine seconda detect\");\r\n        tf.dispose(img)\r\n        tf.dispose(resized)\r\n        tf.dispose(casted)\r\n        tf.dispose(expanded)\r\n        tf.dispose(obj)\r\n    }\r\n\r\n\r\n        function getLabeledFaceDescriptions() {\r\n            const labels = [\"Elon Musk\", \"Marco\", \"Obama\"];\r\n            return Promise.all(\r\n                labels.map(async (label) => {\r\n\r\n                    var descriptions = [];\r\n\r\n                    for (i = 1; i <= 8; i++) {\r\n                        const image = await faceapi.fetchImage(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        //console.log(process.env.PUBLIC_URL + `/labels/${label}/${i}.jpeg`);\r\n                        const detections = await faceapi\r\n                            .detectSingleFace(image)\r\n                            .withFaceLandmarks()\r\n                            .withFaceDescriptor();\r\n\r\n                        descriptions.push(detections.descriptor);\r\n                    }\r\n                    return new faceapi.LabeledFaceDescriptors(label, descriptions)\r\n                })\r\n            );\r\n        }\r\n\r\n        async function faceRecognition(gg, tempo, mod) {\r\n\r\n\r\n            //console.log(results.values());\r\n            //console.log(\"prima loop\");\r\n            for (var i = 0; i < gg.length; i++) {\r\n                var temp = gg[i];\r\n                await procImg(temp, tempo, mod);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Loop and detect hands\r\n        \r\n\r\n        //if (!intervId) {\r\n        //    intervId = setInterval(() => {\r\n        //        updateImageSource();\r\n        //    }, 5000);\r\n        //}\r\n    \r\n        async function processImage(immDetected, coord1, coord2, width, height, tempi, mod) {\r\n            if (immDetected && coord1 && coord2 && width && height && tempi) {\r\n                var c = document.createElement('canvas');\r\n                c.width = 640;\r\n                c.height = 480;\r\n                var ct = c.getContext('2d');\r\n                var imm = new Image(640, 480);\r\n                //console.log(immDetected);\r\n                imm.src = immDetected;\r\n                imm.onload = async function () {\r\n                    await ct.drawImage(imm, coord1 * 640, coord2 * 480, width * 640, height * 480, 0, 0, width * 640, height * 480);\r\n                    dataURI = await c.toDataURL('image/png');\r\n                    document.getElementById(\"screenshot\").src = dataURI;\r\n                    isDetected = false;\r\n                    var gg = document.getElementById(\"screenshot\");\r\n                    var can = document.createElement(\"img\");\r\n                    can.src = await dataURI;\r\n                    foto.push(can);\r\n                    console.log(\"face recognition\");\r\n                    await faceRecognition(foto.slice(), tempi.slice(), mod);\r\n\r\n                }\r\n                //console.log(dataURI);\r\n            }\r\n    }\r\n\r\n    \r\n        async function updateImageSource(isDetected, c1, c2, w, h, tempi, detes, mod) {\r\n            \r\n            if (isDetected && detes && tempi && c1 && c2 && w && h) {\r\n                for (var i = 0; i < detes.length; i++) {\r\n                    await processImage(detes[i], c1[i], c2[i], w[i], h[i], tempi[i], mod);\r\n                }\r\n            }\r\n        }\r\n\r\n    function videoTest() {\r\n        var webc = document.getElementById(\"webcam\");\r\n\r\n        // Check if the webcam is currently active\r\n        if (webcamRef.current.video.srcObject) {\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            // Detach the webcam stream\r\n            webcamRef.current.video.srcObject = null;\r\n\r\n            // Load and play the prerecorded video\r\n            webc.src = process.env.PUBLIC_URL + `/video/alley.mp4`;\r\n            webc.width = 640;\r\n            webc.height = 480;\r\n            webc.style.width = \"640px\";\r\n            webc.style.height = \"480px\";\r\n            webc.style.aspectRatio = \"4 / 3\";\r\n            webc.play();\r\n        }\r\n    }\r\n    function attivaWebcam() {\r\n        var video = webcamRef.current.video;\r\n\r\n        // Check if the webcam is currently active\r\n        if (!video.srcObject) {\r\n            const constraints = {\r\n                video: { width: 1440, height: 1080 }, // Set your desired width and height\r\n            };\r\n\r\n            // Access the webcam and attach the stream to the video element\r\n            navigator.mediaDevices.getUserMedia(constraints)\r\n                .then((stream) => {\r\n                    // Attach the webcam stream to the video element\r\n                    video.srcObject = stream;\r\n                    video.width = 1440; // Set your desired width\r\n                    video.height = 1080; // Set your desired height\r\n                    video.play();\r\n                    setVideoSource(\"webcam\");\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error accessing webcam:\", error);\r\n                });\r\n        }\r\n    }\r\n\r\n  \r\n    function ottieniTempo() {\r\n        today = new Date();\r\n        var ore;\r\n        var minuti;\r\n        var secondi;\r\n        if (today.getHours() < 10) {\r\n            ore = \"0\" + today.getHours();\r\n        } else {\r\n            ore = today.getHours();\r\n        }\r\n        if (today.getMinutes() < 10) {\r\n            minuti = \"0\" + today.getMinutes();\r\n        } else {\r\n            minuti = today.getMinutes();\r\n        }\r\n        if (today.getSeconds() < 10) {\r\n            secondi = \"0\" + today.getSeconds();\r\n        } else {\r\n            secondi = today.getSeconds();\r\n        }\r\n        var time = ore + \":\" + minuti + \":\" + secondi;\r\n        return time;\r\n    }\r\n  \r\n\r\n    const detect = async (net, mod) => {\r\n        var webc = document.getElementById(\"webcam\");\r\n    // Check data is available\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            console.log(\"Pausing the webcam stream...\");\r\n            // Pause the webcam stream\r\n            webcamRef.current.video.pause();\r\n            tempo = ottieniTempo();\r\n            var playback = webc.currentTime;\r\n            console.log(playback);\r\n            console.log(\"Webcam stream paused.\");\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const currentMediaStream = webcamRef.current.video.srcObject;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Set canvas height and width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n\r\n            // 4. TODO - Make Detections\r\n            const img = await tf.browser.fromPixels(video)\r\n            const resized = await tf.image.resizeBilinear(img, [640, 480])\r\n            const casted = await resized.cast('int32')\r\n            const expanded = await casted.expandDims(0)\r\n            const obj = await net.executeAsync(expanded)\r\n\r\n\r\n\r\n            const boxes = await obj[1].array()\r\n            const classes = await obj[0].array()\r\n            const scores = await obj[4].array()\r\n\r\n\r\n            // Draw mesh\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n            detes = [];\r\n            tempi = [];\r\n            h = [];\r\n            w = [];\r\n            c1 = [];\r\n            c2 = [];\r\n            foto = [];\r\n\r\n\r\n            // 5. TODO - Update drawing utility\r\n            // drawSomething(obj, ctx)\r\n\r\n            async function ottieniInfo() {\r\n                for (var i = 0; i < scores[0].length; i++) {\r\n                    if (scores[0][i] > 0.4 && classes[0][i] == 1) {\r\n                        //var webcam = new Image();\r\n                        sdrogo = await webcamRef.current.getScreenshot();\r\n                        //console.log(sdrogo);\r\n                        detes.push(sdrogo)\r\n\r\n                        //console.log(tempo);\r\n                        tempi.push(tempo);\r\n\r\n                        isDetected = true;\r\n                        coord1 = boxes[0][i][1];\r\n                        c1.push(coord1);\r\n                        coord2 = boxes[0][i][0];\r\n                        c2.push(coord2);\r\n                        width = boxes[0][i][3] - boxes[0][i][1];\r\n                        w.push(width);\r\n                        height = boxes[0][i][2] - boxes[0][i][0];\r\n                        h.push(height);\r\n                    } else {\r\n                        if (isDetected) {\r\n                            await updateImageSource(isDetected, c1.slice(), c2.slice(), w.slice(), h.slice(), tempi.slice(), detes.slice(), mod);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            await ottieniInfo();\r\n\r\n\r\n\r\n            //requestAnimationFrame(() => {\r\n            console.log(boxes[0][0]);\r\n            var gg = false;\r\n            drawRect(boxes[0], classes[0], scores[0], 0.40, videoWidth, videoHeight, ctx, gg);\r\n            //});\r\n\r\n            //console.log(\"Waiting for 1000 milliseconds...\");\r\n            //setTimeout(() => {\r\n            //    console.log(\"Resuming the webcam stream...\");\r\n            //    // Resume the webcam stream\r\n            //    webcamRef.current.video.play();\r\n            //    console.log(\"Webcam stream resumed.\");\r\n            //}, 3000);\r\n            if (playback === 34.48) {\r\n                playback = 0;\r\n            }\r\n\r\n            webcamRef.current.video.srcObject = null;\r\n            webc.currentTime = await playback;\r\n\r\n            webcamRef.current.video.srcObject = await currentMediaStream;\r\n\r\n\r\n\r\n\r\n            tf.dispose(img)\r\n            tf.dispose(resized)\r\n            tf.dispose(casted)\r\n            tf.dispose(expanded)\r\n            tf.dispose(obj)\r\n\r\n\r\n            \r\n            \r\n        }\r\n      return sdrogo;\r\n  };\r\n\r\n  useEffect(() => {runCoco()},[]);\r\n\r\n    \r\n    \r\n    function cambiaVideo() {\r\n        if (webcamRef.current) {\r\n            const currentDeviceId = webcamRef.current.props.videoConstraints.deviceId;\r\n            const newDeviceId =\r\n                currentDeviceId === \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\"\r\n                    ? \"a8a4d319ea873e9a51b45d8d67762d3709ed2cbc0ae66396e996b2ff137fdc4d\"\r\n                    : \"5ffb6ea16a3cab0652b7e5c3e6ca6fc438418b40674013d469cf1abd5bf20aad\";\r\n\r\n            // Update the videoConstraints state\r\n            setVideoConstraints((prevConstraints) => ({\r\n                ...prevConstraints,\r\n                deviceId: newDeviceId,\r\n            }));\r\n        }\r\n    }\r\n  return (\r\n      <div className=\"App\">\r\n          \r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          videoConstraints={videoConstraints}\r\n          id=\"webcam\"\r\n          muted={true} \r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n              />\r\n             \r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n              \r\n                  <img\r\n                      \r\n                      id=\"screenshot\"\r\n                      alt=\"Screenshot\"\r\n                      style={{\r\n                          width: 640,\r\n                          height: 480,\r\n                      }}\r\n                      />\r\n          </header>\r\n          \r\n          <button onClick={videoTest}>Test video 1</button>\r\n          <button onClick={attivaWebcam}>Attiva Webcam</button>\r\n          <button onClick={scarica}>Scarica risultati</button>\r\n      </div>\r\n     \r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nfunction renderApp() {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n}\r\n\r\nrenderApp(); // Initial render\r\n\r\n// Listen for the window.onload event\r\nwindow.onload = function () {\r\n    renderApp(); // Render your React app after everything has loaded\r\n};"],"sourceRoot":""}